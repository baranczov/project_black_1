import requests
from config import API_KEY


def get_location_key(location):
    """–ü–æ–ª—É—á–∞–µ—Ç –∫–ª—é—á –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –≥–æ—Ä–æ–¥–∞."""
    try:
        response = requests.get(
            "https://dataservice.accuweather.com/locations/v1/cities/translate.json",
            params={
                "apikey": API_KEY,
                "q": location.lower(),
                "language": "ru-ru",
                "details": "true",
            },
        )
        response.raise_for_status()
        data = response.json()
        if data:
            return data[0]["Key"]
        else:
            print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–ª—é—á –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è.")
            return None

    except requests.exceptions.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è: {e}")
        return None


def get_weather_by_location(location, days=5):
    """–ü–æ–ª—É—á–∞–µ—Ç –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π."""
    try:
        location_key = get_location_key(location)
        if location_key is None:
            return "–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–ª—é—á –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è."

        response = requests.get(
            f"https://dataservice.accuweather.com/forecasts/v1/daily/{5 if days > 1 else 1}day/{location_key}",
            params={
                "apikey": API_KEY,
                "language": "ru-ru",
                "details": "true",
                "metric": "true",
            },
        )
        response.raise_for_status()

        data = response.json()
        forecast_message = ""

        for day in data["DailyForecasts"][:days]:
            date = day["Date"]
            max_temp = day["Temperature"]["Maximum"]["Value"]
            min_temp = day["Temperature"]["Minimum"]["Value"]
            humidity = day["Day"]["RelativeHumidity"]["Average"]
            wind_speed = day["Day"]["Wind"]["Speed"]["Value"]
            rain_probability = day["Day"]["RainProbability"]
            weather_description = day["Day"]["LongPhrase"]

            forecast_message += (
                f"üìÖ <b>–î–∞—Ç–∞:</b> {date}\n"
                f"üå°Ô∏è <b>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</b> {max_temp}¬∞C\n"
                f"üå°Ô∏è <b>–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</b> {min_temp}¬∞C\n"
                f"üíß <b>–í–ª–∞–∂–Ω–æ—Å—Ç—å:</b> {humidity}%\n"
                f"üí® <b>–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞:</b> {wind_speed} –∫–º/—á\n"
                f"üåßÔ∏è <b>–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –¥–æ–∂–¥—è:</b> {rain_probability}%\n"
                f"üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {weather_description}\n\n"
            )

        return forecast_message

    except requests.exceptions.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–≥–æ–¥—ã: {e}")
        return {"error": str(e)}


def get_weather_info(data, interval, get_cached=False):
    """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ –¥–ª—è –∑–∞–¥–∞–Ω–Ω—ã—Ö —Ç–æ—á–µ–∫ –º–∞—Ä—à—Ä—É—Ç–∞."""
    if get_cached:
        with open("saved_answers/answer.txt", "r", encoding="utf-8") as file:
            return file.read()

    route = [data["start_point"]] + data["intermediate_points"] + [data["end_point"]]
    answer = "\n"

    for point in route:
        answer += f"üå§ <b>–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:</b> {point}\n\n"

        try:
            weather_info = get_weather_by_location(point, interval)
            if isinstance(weather_info, str):
                answer += weather_info
            else:
                answer += "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–≥–æ–¥—ã\n\n"
        except Exception as e:
            answer += f"–û—à–∏–±–∫–∞: {str(e).replace(API_KEY, '<API_KEY>')}"

    return answer


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã."""
    weather_info = get_weather_info(
        {
            "start_point": "–ú–æ—Å–∫–≤–∞",
            "end_point": "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
            "intermediate_points": [],
        },
        5,
    )
    print(weather_info)


if __name__ == "__main__":
    main()
